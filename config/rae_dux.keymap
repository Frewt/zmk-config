#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT      0
#define QUICK        1
#define NUM_SYM      2
#define FUN          3
#define GAMING_1     4
#define GAMING_2     5
#define GAMING_3     6

/ {
combos {
compatible = "zmk,combos";
combo_minus {
timeout-ms = <50>;
key-positions = <7 8>;
bindings = <&kp kp_minus>;
layers = <1>;
    };
  };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
    &kp Q    &kp W    &kp F     &kp P     &kp B          &kp J     &kp L     &kp U     &kp Y     &kp APOS
    &kp A    &kp R    &kp S     &kp T     &kp G          &kp M     &kp N     &kp E     &kp I     &kp O
    &kp Z    &kp X    &kp C     &kp D     &kp V          &kp K     &kp H     &kp COMMA &kp DOT   &kp FSLH
                      &mo NUM_SYM  &mo QUICK   &mo FUN     &none  &kp SPACE &mo FUN
            >;
        };
        
        quick_acces_layer {
            bindings = <
    &kp ESC    &kp GRAVE    &none       &none         &none          &kp HOME     &kp PG_DN       &kp PG_UP   &kp END     &kp BSPC
    &sk LGUI   &sk LALT     &sk LCTRL   &sk LSHIFT    &kp TAB        &kp LEFT     &kp DOWN        &kp UP      &kp RIGHT   &kp SEMI
    &kp LGUI   &kp LBRC     &kp LBKT    &kp LPAR      &kp CAPS       &none        &kp RPAR        &kp RBKT    &kp RBRC    &kp BSLH
                            &none  &mo QUICK     &none          &kp BSPC     &kp RET         &kp DELETE
            >;
        };
        
        num_sym_layer {
            bindings = <
    &kp ESC    &kp GRAVE    &none       &none         &none          &none     &kp N7       &kp N8   &kp N9     &kp DOT
    &sk LGUI   &sk LALT     &sk LCTRL   &sk LSHIFT    &kp TAB        &kp TAB     &kp N4        &kp N5      &kp N6   &kp MINUS
    &kp LGUI   &kp LBRC     &kp LBKT    &kp LPAR      &kp CAPS       &none        &kp N1        &kp N2    &kp N3    &kp EQUAL
                          &mo NUM_SYM      &none     &none           &none  &kp N0 &none
            >;
        };
            
        fun_blue_layer {
            bindings = <
    &tog GAMING_1   &kp F7    &kp F8     &kp F9     &kp F10          &none     &none    &none     &none     &bt BT_CLR
    &none   &kp F4    &kp F5     &kp F6     &kp F11          &none     &kp C_VOL_DN    &kp C_VOL_UP     &none     &none
    &none   &kp F1    &kp F2     &kp F3     &kp F12          &none     &none    &none     &none     &none
                      &none      &none      &mo FUN          &none     &none    &mo FUN
            >;
        };
        
        GAMING_layer_1 {
            bindings = <
    &kp N1        &kp N2   &kp N3    &kp N4    &kp N5         &kp Y     &kp U     &kp I     &kp O     &kp P
    &kp LSHIFT    &kp A    &kp W     &kp D     &kp E          &kp H     &kp J     &kp K     &kp L     &kp APOS
    &kp LCTRL     &kp C    &kp S     &kp F     &kp R          &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                      &mo GAMING_2      &kp SPACE  &mo GAMING_3          &kp BSPC     &tog GAMING_1    &none
            >;
        };

        GAMING_layer_2 {
            bindings = <
    &kp N6        &kp N7   &kp N8    &kp N9    &kp N0         &kp Y     &kp U     &kp I     &kp O     &kp P
    &kp Q         &kp A    &kp W     &kp D     &kp T          &kp H     &kp J     &kp K     &kp L     &kp APOS
    &kp Z         &kp X    &kp S     &kp V     &kp G          &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                      &mo GAMING_2      &kp SPACE  &mo GAMING_3          &kp BSPC     &tog GAMING_1    &none
            >;
        };

        GAMING_layer_3 {
            bindings = <
    &kp ESC        &kp N7   &kp N8    &kp N9    &kp N0         &kp Y     &kp U     &kp I     &kp O     &kp P
    &kp TAB         &kp A    &kp W     &kp D     &kp T          &kp H     &kp J     &kp K     &kp L     &kp APOS
    &kp Z         &kp X    &kp S     &kp V     &kp G          &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                  &mo GAMING_2      &kp SPACE  &mo GAMING_3          &kp BSPC     &tog GAMING_1    &none
            >;
        };
    };
};
